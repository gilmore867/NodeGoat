# test of policy scan issue importer

name: Policy scan and Issue importer

on: [push, pull_request, workflow_dispatch]

jobs:
  get-policy-flaws:
    runs-on: ubuntu-latest
    environment: veracode
    container: 
      image: veracode/api-signing:latest
      env:
        VERACODE_API_ID_KEY: ${VERACODE_API_KEY_ID}
        VERACODE_API_ID_SECRET: ${VERACODE_API_KEY_SECRET}
      #options: --user root
    steps:
      # Note: this will likely fail if there are more than 500 flaws, due to Veracode results limiting
      #   (would need a more elaborate method)
      #
      # Note 2: Assumes Environment Secrets of VERACODE_API_KEY_ID and VERACODE_API_KEY_SECRET
      #   (not Repo Secrets)
      - name: get policy flaws
        run: |
          cd /tmp
          export
          echo ID: ${VERACODE_API_KEY_ID}
          guid=$(http --auth-type veracode_hmac "https://api.veracode.com/appsec/v1/applications?name=NodeGoat" | jq -r '._embedded.applications[0].guid') 
          echo ${guid}
          total_flaws=$(http --auth-type veracode_hmac "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo ${total_flaws}
          http --auth-type veracode_hmac "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" > policy_flaws.json
          ls -l

      - name: save results file
        uses: actions/upload-artifact@v2
        with:
          name: policy-flaws
          path: policy_flaws.json

  import-policy-flaws:
    needs: get-policy-flaws
    runs-on: ubuntu-latest
    steps:
      - name: get flaw file
        uses: actions/download-artifact@v2
        with:
          name: policy-flaws
          path: /tmp

      - name: debug1
        run: |
          pwd
          ls -l
          ls -l /tmp

      - name: import flaws as issues
        uses: buzzcode/veracode-flaws-to-issues@main
        with:
          scan-results-json: '/tmp/policy_flaws.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}


